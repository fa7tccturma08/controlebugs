// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ControleBugs.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("Manter Usuarios", new string[] {
            "RealizarLogin"}, Description="\tEu como Administrador do bugtraker quero Manter os usuarios na aplicacao", SourceFile="Features\\ManterUsuarios.feature", SourceLine=2)]
    public partial class ManterUsuariosFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ManterUsuarios.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt"), "Manter Usuarios", "\tEu como Administrador do bugtraker quero Manter os usuarios na aplicacao", ProgrammingLanguage.CSharp, new string[] {
                        "RealizarLogin"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void ConsultarUsuariosComSucesso(string iD, string nome, string login, string acoes, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ConsultarUsuarios"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Consultar Usuarios Com Sucesso", null, @__tags);
#line 7
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
 testRunner.When("eu realiso a consulta dos usuarios", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 9
 testRunner.Then(string.Format("O sistema exibe o formulario com os campos {0}, {1} e <Senha>", nome, login), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line 10
 testRunner.And("as opções \"Cancelar\" e \"Salvar\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 11
 testRunner.And(string.Format("Lista os usuários anteriomente cadastrados com os campos <Id> , {0} , {1} , <Remo" +
                        "ver>,<Alterar>", nome, login), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Consultar Usuarios Com Sucesso, \'1\'", new string[] {
                "ConsultarUsuarios"}, SourceLine=14)]
        public virtual void ConsultarUsuariosComSucesso_1()
        {
#line 7
this.ConsultarUsuariosComSucesso("\'1\'", "\'bugtracker\'", "\'bugtracker\'", "\"Remover Alterar\'", ((string[])(null)));
#line hidden
        }
        
        public virtual void IncluirUsuariosComSucesso(string nome, string usuario, string senha, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "IncluirUsuariosComSucesso"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Incluir Usuários com sucesso", null, @__tags);
#line 18
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 19
 testRunner.When(string.Format("eu preencho os campos  {0} , <Login> ou {1} de forma correta", nome, senha), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 20
 testRunner.And("seleciono a opção \"Salvar\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 21
 testRunner.Then("O Sistema exibe a mensagem \"Usuário Adicionado Com Sucesso!\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line 22
 testRunner.And(string.Format("Exibe o usuário que foi adicionado na lista de usuários anteriormente cadastrados" +
                        " com os campos <Id> , {0} , <Login> , <Ações>", nome), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Incluir Usuários com sucesso, \'Maria Jose\'", new string[] {
                "IncluirUsuariosComSucesso"}, SourceLine=25)]
        public virtual void IncluirUsuariosComSucesso_MariaJose()
        {
#line 18
this.IncluirUsuariosComSucesso("\'Maria Jose\'", "\'mjose@gmail.com\'", "\'Resource@123\'", ((string[])(null)));
#line hidden
        }
        
        public virtual void IncluirUsuariosSemPreencherUmCampoObrigatorio(string nome, string usuario, string senha, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "IncluirUsuariosInformandoCampoObrigatorioNaoPreenchido"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Incluir Usuários sem preencher um campo obrigatório", null, @__tags);
#line 29
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 30
 testRunner.When(string.Format("eu deixo de  preencher um dos campos  {0} , <Login> ou {1} de forma correta", nome, senha), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 31
 testRunner.And("escolho a opção \"Salvar\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 32
 testRunner.Then("O Sistema emite o alerta  \"<campo> :  campo é obrigatório\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Incluir Usuários sem preencher um campo obrigatório, \'\'", new string[] {
                "IncluirUsuariosInformandoCampoObrigatorioNaoPreenchido"}, SourceLine=35)]
        public virtual void IncluirUsuariosSemPreencherUmCampoObrigatorio_()
        {
#line 29
this.IncluirUsuariosSemPreencherUmCampoObrigatorio("\'\'", "\'mjose@gmail.com\'", "\'Resource@123\'", ((string[])(null)));
#line hidden
        }
        
        public virtual void IncluirUsuariosInformandoOCampoComFormatoInvalido(string nome, string usuario, string senha, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "IncluirUsuariosInformandoCampoFormatoinvalido"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Incluir Usuários informando o campo com formato inválido", null, @__tags);
#line 39
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 40
 testRunner.When("eu preencho o campo <senha> com uma quantidade de caracteres menor que 4 digitos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 41
 testRunner.And("elejo a opção \"Salvar\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 42
 testRunner.Then("O sistema informa ao usuário com a  mensagem \"O campo <senha> Não e forte o basta" +
                    "nte\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Incluir Usuários informando o campo com formato inválido, \'Maria Jose\'", new string[] {
                "IncluirUsuariosInformandoCampoFormatoinvalido"}, SourceLine=46)]
        public virtual void IncluirUsuariosInformandoOCampoComFormatoInvalido_MariaJose()
        {
#line 39
this.IncluirUsuariosInformandoOCampoComFormatoInvalido("\'Maria Jose\'", "\'mjose@gmail.com\'", "\'123\'", ((string[])(null)));
#line hidden
        }
        
        public virtual void EditarUsuariosComSucesso(string nome, string usuario, string senha, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "EditarUsuariosComSucesso"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Editar Usuários com sucesso", null, @__tags);
#line 50
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 51
 testRunner.When("Eu seleciono um usuário que já cadastrado anteriomente", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 52
 testRunner.And(string.Format("eu preencho um dos campos  {0} , <Login> ou {1} de forma correta", nome, senha), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 53
 testRunner.And("opto pela a opção \"Salvar\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 54
 testRunner.Then("O Sistema externa a mensagem \"Usuário Adicionado Com Sucesso!\" para o usuario", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line 55
 testRunner.And(string.Format("exibe o usuário com as informações alteradas na lista de usuários cadastrados com" +
                        " os campos <Id> , {0} , <Login> , <Ações>", nome), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Editar Usuários com sucesso, \'Maria Jose\'", new string[] {
                "EditarUsuariosComSucesso"}, SourceLine=58)]
        public virtual void EditarUsuariosComSucesso_MariaJose()
        {
#line 50
this.EditarUsuariosComSucesso("\'Maria Jose\'", "\'mjose@gmail.com\'", "\'Resource@123\'", ((string[])(null)));
#line hidden
        }
        
        public virtual void EditarUsuariosSemPreencherUmCampoObrigatorio(string nome, string usuario, string senha, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "EditarUsuariosInformandoCampoObrigatorioNaoPreenchido"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Editar Usuários sem preencher um campo obrigatório", null, @__tags);
#line 62
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 63
 testRunner.When("Eu seleciono um usuário já cadastrado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 64
 testRunner.And(string.Format("eu deixo de  preencher um dos campos  {0} , <Login> ou {1} de forma correta", nome, senha), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 65
 testRunner.And("seleciono a opção \"Salvar\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 66
 testRunner.Then("O Sistema mostra a mensagem  \"<campo> :  campo é obrigatório\" para o usuario", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line 67
 testRunner.And(string.Format("Lista os usuários já cadastrados com os campos <Id> , {0} , <Login> , <Ações>", nome), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Editar Usuários sem preencher um campo obrigatório, \'\'", new string[] {
                "EditarUsuariosInformandoCampoObrigatorioNaoPreenchido"}, SourceLine=70)]
        public virtual void EditarUsuariosSemPreencherUmCampoObrigatorio_()
        {
#line 62
this.EditarUsuariosSemPreencherUmCampoObrigatorio("\'\'", "\'mjose@gmail.com\'", "\'Resource@123\'", ((string[])(null)));
#line hidden
        }
        
        public virtual void EditarUsuariosInformandoOCampoComFormatoInvalido(string nome, string usuario, string senha, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "EditarUsuariosInformandoCampoFormatoinvalido"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Editar Usuários informando o campo com formato inválido", null, @__tags);
#line 74
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 75
 testRunner.When("Eu seleciono um usuário anteriomente cadastrado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 76
 testRunner.And("eu preencho o campo <senha> com uma quantidade de caracteres menor que 4 digitos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 77
 testRunner.And("seleciono a opção \"Salvar\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 78
 testRunner.Then("O sistema reporta a mensagem \"O campo <senha> Não e forte o bastante\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line 79
 testRunner.And(string.Format("Lista os usuários já cadastrados com os campos <Id> , {0} , <Login> , <Ações>", nome), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Editar Usuários informando o campo com formato inválido, \'Maria Jose\'", new string[] {
                "EditarUsuariosInformandoCampoFormatoinvalido"}, SourceLine=82)]
        public virtual void EditarUsuariosInformandoOCampoComFormatoInvalido_MariaJose()
        {
#line 74
this.EditarUsuariosInformandoOCampoComFormatoInvalido("\'Maria Jose\'", "\'mjose@gmail.com\'", "\'123\'", ((string[])(null)));
#line hidden
        }
        
        public virtual void RemoverUmUsuarioComSucesso(string nome, string usuario, string senha, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RemoverUsuarioComSucesso"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Remover um usuario com sucesso", null, @__tags);
#line 86
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 87
 testRunner.When("eu seleciono um usuario que não esta associado a um Bug da lista de usuarios disp" +
                    "oniveis", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 88
 testRunner.And("seleciono a opção Remover", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 89
 testRunner.Then("o Sistema retorna a mensagem : \"Usuário Removido Com Sucesso!\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Remover um usuario com sucesso, \'Jose Emanuel\'", new string[] {
                "RemoverUsuarioComSucesso"}, SourceLine=92)]
        public virtual void RemoverUmUsuarioComSucesso_JoseEmanuel()
        {
#line 86
this.RemoverUmUsuarioComSucesso("\'Jose Emanuel\'", "\'mjose@gmail.com\'", "\'123\'", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion

